{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/appMain.lsc","webpack:///./app/debugMockData.lsc","webpack:///./app/logging.lsc","webpack:///./app/parsertest.lsc","webpack:///external \"chrome-native-messaging\"","webpack:///external \"dotenv\"","webpack:///external \"fs\"","webpack:///external \"node-mpv\"","webpack:///external \"p-finally\"","webpack:///external \"path\"","webpack:///external \"qs\"","webpack:///external \"url\"","webpack:///external \"winston\"","webpack:///external \"winston-daily-rotate-file\""],"names":["path","join","process","cwd","messageHandler","videoNoTimeStamp","url","cookies","mpvOptions","push","done","logger","debug","YouTubeURLParser","ytParser","isValid","createCookiesFile","createNewMpvInstance","cookiesFilePath","mpv","on","error","start","then","volume","load","cleanYoutubeUrl","getStartAtSecond","videoStartPosition","goToPosition","startMPVpaused","pause","catch","mpvAPI","mpvPath","generateScriptOpts","oscStyle","alwaysOnTop","generateYTvideoQualityOpts","videoQuality","generateMPVwindowSizeOpts","defaultMpvWindowSize","osc","fs","writeFileSync","parser","getId","require","config","Buffer","from","env","DEBUGCOOKIES","toString","dontLetYTpageVideoAutoLoad","videoWithTimeStamp","videoNeedToSignIn","winston","transports","DailyRotateFile","filename","datePattern","maxSize","maxFiles","createLogger","level","format","prettyPrint","fileTransport","Console","validHost","validPathname","validId","validStartAt","URL","constructor","href","parsedURL","query","search","ignoreQueryPrefix","id","exec","pathname","addQueryPrefix","startAt","_startAt","hour","Number","minute","second","test","hostname","getCanonicalURL","getEmbeddingURL","getShortURL","getThumbnailURL","getIframe","options","allowFullScreen","undefined","frameBorder","responsive","noCookie","domain","options2"],"mappings":"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","file":"appMain-compiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/appMain.lsc\");\n","import path from 'path'\r\nimport fs from 'fs'\r\n\r\nimport mpvAPI from 'node-mpv'\r\nimport nativeMessage from 'chrome-native-messaging'\r\nimport pFinally from 'p-finally'\r\n// import { YouTubeURLParser } from '@iktakahiro/youtube-url-parser'\r\nimport {YouTubeURLParser } from './parsertest.lsc' //TODO:remove this and its file when done\r\n\r\nimport { logger } from './logging.lsc'\r\n\r\nimport { videoNoTimeStamp, videoWithTimeStamp } from './debugMockData.lsc' //TODO: REMOVE THIS and switch to orig if my PR is accepted\r\n\r\ntype MpvOptions = {\r\n  volume: number,\r\n  alwaysOnTop: boolean,\r\n  videoQuality: string,\r\n  defaultMpvWindowSize: string,\r\n  dontLetYTpageVideoAutoLoad: boolean,\r\n  oscStyle: string,\r\n  startMPVpaused: boolean\r\n};\r\ntype NativeMessage = {\r\n  url: string,\r\n  cookies: string,\r\n  mpvOptions: MpvOptions\r\n};\r\nmpvPath = path.join(process.cwd(), 'mpv.exe')\r\n// input = new nativeMessage.Input()\r\n// transform = new nativeMessage.Transform(messageHandler)\r\n// output = new nativeMessage.Output()\r\n\r\n// process.stdin\r\n//   .pipe(input)\r\n//   .pipe(transform)\r\n//   .pipe(output)\r\n//   .pipe(process.stdout)\r\n\r\n//TODO: remove this\r\n// messageHandler(videoWithTimeStamp, null, () -> return)\r\nmessageHandler(videoNoTimeStamp, null, () -> return)\r\n\r\nmessageHandler({url, cookies, mpvOptions}: NativeMessage, push, done):void ->\r\n  logger.debug('messageHandler ')\r\n  logger.debug(url)\r\n  logger.debug(cookies)\r\n  logger.debug(mpvOptions)\r\n\r\n  ytParser = new YouTubeURLParser(url)\r\n\r\n  if !ytParser.isValid(url): return\r\n\r\n  cookiesFilePath = createCookiesFile(cookies)\r\n  mpv = createNewMpvInstance(mpvOptions, cookiesFilePath)\r\n\r\n  mpv.on('crashed', () ->\r\n    logger.error('mpv crashed')\r\n    done()\r\n  )\r\n\r\n  pFinally(\r\n    mpv.start()\r\n      .then(() -> mpv.volume(mpvOptions.volume))\r\n      .then(() -> mpv.load(cleanYoutubeUrl(url)))\r\n      .then(() ->\r\n        videoStartPosition = ytParser.getStartAtSecond()\r\n        // If it's 10 seconds or less then it's not worth skipping ahead\r\n        if videoStartPosition > 10:\r\n          mpv.goToPosition(videoStartPosition)\r\n      )\r\n      .then(() ->\r\n        if mpvOptions.startMPVpaused: mpv.pause()\r\n      )\r\n    , done\r\n  )\r\n  .catch(logger.error)\r\n\r\ncreateNewMpvInstance(mpvOptions:MpvOptions, cookiesFilePath:string) ->\r\n  new mpvAPI(\r\n    {'binary': mpvPath},\r\n    [\r\n      '--cookies',\r\n      `--cookies-file=\"${ cookiesFilePath }\"`,\r\n      `--ytdl-raw-options=cookies=\"${ cookiesFilePath }\"`,\r\n        generateScriptOpts(mpvOptions.oscStyle),\r\n        mpvOptions.alwaysOnTop ? `--ontop` : ``,\r\n        generateYTvideoQualityOpts(mpvOptions.videoQuality),\r\n        generateMPVwindowSizeOpts(mpvOptions.defaultMpvWindowSize)\r\n    ]\r\n  )\r\n\r\ngenerateMPVwindowSizeOpts(defaultMpvWindowSize:string):string ->\r\n  if defaultMpvWindowSize === 'off': return ``\r\n  `--autofit=${ defaultMpvWindowSize }`\r\n\r\ngenerateYTvideoQualityOpts(videoQuality:string):string ->\r\n  if videoQuality === 'original': return ``\r\n  `--ytdl-format=${ videoQuality }`\r\n\r\ngenerateScriptOpts(osc:string):string ->\r\n  if osc === 'box': `--script-opts=osc-layout=box,osc-scalewindowed=1.2`\r\n  else: `--script-opts=osc-scalewindowed=1.2`\r\n\r\ncreateCookiesFile(cookies:string):string ->\r\n  cookiesFilePath = path.join(process.cwd(), 'cookies.txt')\r\n  fs.writeFileSync(cookiesFilePath, cookies)\r\n  cookiesFilePath\r\n\r\n/*****\r\n* I had some issues with mpv where if the youtube url had stuff at the end of it -\r\n* e.g. https://www.youtube.com/watch?v=WUC863mOtTc&feature=youtu.be&t=2398, then\r\n* mpv would seem to ignore any command line flags after the url, so gonna clean it.\r\n*/\r\ncleanYoutubeUrl(url:string):string ->\r\n  parser = new YouTubeURLParser(url)\r\n  `https://www.youtube.com/watch?v=${ parser.getId() }`\r\n\r\n\r\nprocess.on('unhandledRejection', logger.error)\r\nprocess.on('uncaughtException', logger.error)\r\n","require('dotenv').config()\r\n\r\n/*****\r\n* dotenv seems to add extra backslashes to the \\t's, so I base64\r\n* encoded the string in the .env file\r\n*/\r\ncookies = Buffer.from(process.env.DEBUGCOOKIES, 'base64').toString('utf8')\r\n\r\nvideoNoTimeStamp = {\r\n  cookies,\r\n  mpvOptions: {\r\n    alwaysOnTop: true,\r\n    defaultMpvWindowSize: '640x360',\r\n    dontLetYTpageVideoAutoLoad: false,\r\n    oscStyle: \"bottombar\",\r\n    startMPVpaused: false,\r\n    videoQuality: \"original\",\r\n    volume: 70,\r\n  }\r\n  url: \"https://www.youtube.com/watch?v=E42D2XF2oAs\"\r\n}\r\nvideoWithTimeStamp = {\r\n  cookies,\r\n  mpvOptions: {\r\n    alwaysOnTop: false,\r\n    defaultMpvWindowSize: 'off',\r\n    dontLetYTpageVideoAutoLoad: false,\r\n    oscStyle: \"box\",\r\n    startMPVpaused: true,\r\n    videoQuality: \"original\",\r\n    volume: 70,\r\n  }\r\n  url: \"https://www.youtube.com/watch?v=VFIq94h91sM&t=1h26m15s\"\r\n}\r\nvideoNeedToSignIn = {\r\n  cookies,\r\n  mpvOptions: {\r\n    alwaysOnTop: false,\r\n    defaultMpvWindowSize: 'off',\r\n    dontLetYTpageVideoAutoLoad: false,\r\n    oscStyle: \"box\",\r\n    startMPVpaused: true,\r\n    videoQuality: \"original\",\r\n    volume: 70,\r\n  }\r\n  url: \"https://www.youtube.com/watch?v=6LZM3_wp2ps\"\r\n}\r\n\r\nexport {\r\n  videoNoTimeStamp,\r\n  videoWithTimeStamp,\r\n  videoNeedToSignIn\r\n}\r\n","import winston from 'winston'\r\nimport 'winston-daily-rotate-file'\r\n\r\nfileTransport = new (winston.transports.DailyRotateFile)({\r\n  filename: 'yt-open-in-mpv-native-client-%DATE%.log',\r\n  datePattern: 'YYYY-MM-DD-HH',\r\n  maxSize: '20m',\r\n  maxFiles: '7d'\r\n})\r\n\r\nlogger = winston.createLogger({\r\n  level: if ISDEV: 'debug' else: 'error',\r\n  format: if ISDEV: winston.format.prettyPrint() else: winston.format.json()\r\n  transports: [\r\n    fileTransport,\r\n    if ISDEV: new winston.transports.Console()\r\n  ]\r\n})\r\n\r\nexport {\r\n  logger\r\n}\r\n","import { stringify, parse } from \"qs\"\r\n\r\nconst validHost = /^(www.youtube.com|youtu.be)$/\r\nconst validPathname = /^.*\\/([a-zA-Z0-9_-]{11})$/\r\nconst validId = /^([a-zA-Z0-9_-]{11})$/\r\nconst validStartAt = /^((\\d{1,2})h)?((\\d{1,2})m)?((\\d{1,2})s)?$/\r\nconst URL = process ? require('url').URL : URL\r\n\r\nexport class YouTubeURLParser {\r\n    constructor(url: string) {\r\n\r\n        const parser = new URL(url)\r\n        parser.href = url\r\n        this.parsedURL = parser\r\n\r\n        const query = parse(this.parsedURL.search, { ignoreQueryPrefix: true })\r\n        this.id = (validPathname.exec(this.parsedURL.pathname) || [])[1] || null\r\n        if (this.id === null) {\r\n            this.id = (validId.exec(query[\"v\"]) || [])[1] || null\r\n        }\r\n        delete query[\"watch\"]\r\n        this.search = stringify(query, { addQueryPrefix: false })\r\n\r\n        const startAt = (validStartAt.exec(query[\"t\"]) || []) || null\r\n        if (startAt) {\r\n            this._startAt = {\r\n                hour: Number(startAt[2]) || 0,\r\n                minute: Number(startAt[4]) || 0,\r\n                second: Number(startAt[6]) || 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks whether URL is valid or invalid.\r\n     */\r\n    isValid(): boolean {\r\n        if (!validHost.test(this.parsedURL.hostname)) {\r\n            return false\r\n        }\r\n        if (this.id === null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * Returns the id of a YouTube video.\r\n     * @return {string | null} id\r\n     */\r\n    getId(): string | null {\r\n        if (!this.isValid()) {\r\n            return null\r\n        }\r\n        return this.id\r\n    }\r\n\r\n    /**\r\n     * Return the canonical URL of a YouTube video.\r\n     * @return {string | null} URL\r\n     */\r\n    getCanonicalURL(): string | null {\r\n        if (!this.isValid()) {\r\n            return null\r\n        }\r\n        return `https://www.youtube.com/watch?v=${this.id}&${this.search}`\r\n    }\r\n\r\n    /**\r\n     * Return the embedding URL of a YouTube video.\r\n     * @return {string | null} URL\r\n     */\r\n    getEmbeddingURL(): string | null {\r\n        if (!this.isValid()) {\r\n            return null\r\n        }\r\n        return `https://www.youtube.com/embed/${this.id}?${this.search}`\r\n    }\r\n\r\n    /**\r\n     * Return the short URL of a YouTube video.\r\n     * @return {string | null} URL\r\n     */\r\n    getShortURL(): string | null {\r\n        if (!this.isValid()) {\r\n            return null\r\n        }\r\n        return `https://youtu.be/${this.id}?${this.search}`\r\n    }\r\n\r\n    /**\r\n     * Return the start time (second) of a YouTube video.\r\n     * @return {number} second\r\n     */\r\n    getStartAtSecond(): number | null {\r\n        if (!this.isValid()) {\r\n            return null\r\n        }\r\n        return this._startAt.hour * 60 * 60 + this._startAt.minute * 60 + this._startAt.second\r\n    }\r\n\r\n    /**\r\n     * Return the thumbnail URL of a YouTube video.\r\n     * @return {string | null} ULR\r\n     */\r\n    getThumbnailURL(): string | null {\r\n        if (!this.isValid()) {\r\n            return null\r\n        }\r\n        return `https://img.youtube.com/vi/${this.id}/0.jpg`\r\n    }\r\n\r\n    /**\r\n     * Return the HTML string for embedding.\r\n     * @return {string | null} HTML string\r\n     */\r\n    getIframe(options): string | null {\r\n        if (!this.isValid()) {\r\n            return null\r\n        }\r\n\r\n        // set default values\r\n        options2 = {\r\n            allowFullScreen: (options[\"allowFullScreen\"] === undefined) ? true : options.allowFullScreen,\r\n            frameBorder: (options[\"frameBorder\"] === undefined) ? 0 : options.frameBorder,\r\n            responsive: (options[\"responsive\"] === undefined) ? true : options.responsive,\r\n            noCookie: (options[\"noCookie\"] === undefined) ? false : options.noCookie,\r\n        }\r\n\r\n        const domain = options2.noCookie ? \"www.youtube-nocookie.com\" : \"www.youtube.com\"\r\n        return `<div class=\"embed-responsive embed-responsive-16by9\">\r\n        <iframe class=\"embed-responsive-item\" type=\"text/html\"\r\n        src=\"https://${domain}/embed/${this.id}?rel=0&amp;start=${this.getStartAtSecond() || 0}\"\r\n        frameborder=\"${options2.frameBorder}\" ${options2.allowFullScreen ? \"allowfullscreen\" : \"\"}></iframe>\r\n        </div>`\r\n    }\r\n}\r\n\r\n","module.exports = require(\"chrome-native-messaging\");","module.exports = require(\"dotenv\");","module.exports = require(\"fs\");","module.exports = require(\"node-mpv\");","module.exports = require(\"p-finally\");","module.exports = require(\"path\");","module.exports = require(\"qs\");","module.exports = require(\"url\");","module.exports = require(\"winston\");","module.exports = require(\"winston-daily-rotate-file\");"],"sourceRoot":""}